{"ast":null,"code":"var _jsxFileName = \"/home/rpai/Documents/development/react/calculator/src/components/AreaCalculatorForm.js\";\nimport React, { Component } from \"react\";\nimport ShapeSelectionForm from \"./ShapeSelectionForm\";\nimport ShapeDimensionForm from \"./ShapeDimensionForm\";\nimport Area from \"./Area\";\nimport ActionButtons from \"./ActionButtons\";\n\nclass AreaCalculatorForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      step: 1,\n      shape: \"\",\n      diameter: 0,\n      side: 0,\n      length: 0,\n      breadth: 0,\n      axisA: 0,\n      axisB: 0\n    };\n\n    this.nextStep = () => {\n      let _this$state = this.state,\n          step = _this$state.step,\n          shape = _this$state.shape,\n          diameter = _this$state.diameter,\n          side = _this$state.side,\n          length = _this$state.length,\n          breadth = _this$state.breadth,\n          axisA = _this$state.axisA,\n          axisB = _this$state.axisB;\n      let valueEntered = diameter !== 0 || side !== 0 || length !== 0 || breadth !== 0 || axisA !== 0 || axisB !== 0;\n      step = step < 3 && (step === 2 && valueEntered || step === 1 && shape !== \"\") ? step + 1 : step;\n      this.setState({\n        step: step\n      });\n    };\n\n    this.setStart = () => {\n      let step = this.state.step;\n      this.setState({\n        step: 1,\n        shape: \"\"\n      });\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.setShape = e => {\n      this.setState({\n        shape: e.target.value\n      });\n    };\n  }\n\n  render() {\n    const step = this.state.step;\n    const _this$state2 = this.state,\n          shape = _this$state2.shape,\n          diameter = _this$state2.diameter,\n          side = _this$state2.side,\n          length = _this$state2.length,\n          breadth = _this$state2.breadth,\n          axisA = _this$state2.axisA,\n          axisB = _this$state2.axisB;\n    const values = {\n      shape,\n      diameter,\n      side,\n      length,\n      breadth,\n      axisA,\n      axisB\n    };\n\n    switch (step) {\n      case 1:\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, React.createElement(ShapeSelectionForm, {\n          setShape: this.setShape,\n          shape: values.shape,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }), React.createElement(ActionButtons, {\n          step: step,\n          nextStep: this.nextStep,\n          startAgain: this.setStart,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }));\n\n      case 2:\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, \"Step 2 - Insert your values\")), React.createElement(\"div\", {\n          className: \"mt-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, \"You have selected a \", shape, \", please input the required values\")), React.createElement(ShapeDimensionForm, {\n          handleChange: this.handleChange,\n          values: values,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }), React.createElement(ActionButtons, {\n          step: step,\n          nextStep: this.nextStep,\n          startAgain: this.setStart,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }));\n\n      case 3:\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, React.createElement(Area, {\n          values: values,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }), React.createElement(ActionButtons, {\n          step: step,\n          startAgain: this.setStart,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }));\n    }\n  }\n\n}\n\nexport default AreaCalculatorForm;","map":{"version":3,"sources":["/home/rpai/Documents/development/react/calculator/src/components/AreaCalculatorForm.js"],"names":["React","Component","ShapeSelectionForm","ShapeDimensionForm","Area","ActionButtons","AreaCalculatorForm","state","step","shape","diameter","side","length","breadth","axisA","axisB","nextStep","valueEntered","setState","setStart","handleChange","e","target","id","value","setShape","render","values"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ShapeSelectionForm from \"./ShapeSelectionForm\";\nimport ShapeDimensionForm from \"./ShapeDimensionForm\";\nimport Area from \"./Area\";\nimport ActionButtons from \"./ActionButtons\";\n\nclass AreaCalculatorForm extends Component {\n  state = {\n    step: 1,\n    shape: \"\",\n    diameter: 0,\n    side: 0,\n    length: 0,\n    breadth: 0,\n    axisA: 0,\n    axisB: 0\n  };\n\n  // Proceed to the next step if not the final step\n  nextStep = () => {\n    let {\n      step,\n      shape,\n      diameter,\n      side,\n      length,\n      breadth,\n      axisA,\n      axisB\n    } = this.state;\n\n    let valueEntered =\n      diameter !== 0 ||\n      side !== 0 ||\n      length !== 0 ||\n      breadth !== 0 ||\n      axisA !== 0 ||\n      axisB !== 0;\n\n    step =\n      step < 3 && ((step === 2 && valueEntered) || (step === 1 && shape !== \"\"))\n        ? step + 1\n        : step;\n\n    this.setState({\n      step: step\n    });\n  };\n\n  // Set the step to first step. Reset the shape and restart from step one.\n  setStart = () => {\n    let { step } = this.state;\n\n    this.setState({\n      step: 1,\n      shape: \"\"\n    });\n  };\n\n  // Handle change of the fields\n  handleChange = e => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  };\n\n  // Set the shape in state from the value of radio button selected\n  setShape = e => {\n    this.setState({\n      shape: e.target.value\n    });\n  };\n\n  render() {\n    const { step } = this.state;\n    const { shape, diameter, side, length, breadth, axisA, axisB } = this.state;\n    const values = { shape, diameter, side, length, breadth, axisA, axisB };\n\n    switch (step) {\n      case 1:\n        return (\n          <div>\n            <ShapeSelectionForm setShape={this.setShape} shape={values.shape} />\n            <ActionButtons\n              step={step}\n              nextStep={this.nextStep}\n              startAgain={this.setStart}\n            />\n          </div>\n        );\n      case 2:\n        return (\n          <div>\n            <div>\n              <h5>\n                <b>Step 2 - Insert your values</b>\n              </h5>\n              <div className=\"mt-3\">\n                You have selected a {shape}, please input the required values\n              </div>\n            </div>\n            <ShapeDimensionForm\n              handleChange={this.handleChange}\n              values={values}\n            />\n            <ActionButtons\n              step={step}\n              nextStep={this.nextStep}\n              startAgain={this.setStart}\n            />\n          </div>\n        );\n      case 3:\n        return (\n          <div>\n            <Area values={values} />\n            <ActionButtons step={step} startAgain={this.setStart} />\n          </div>\n        );\n    }\n  }\n}\n\nexport default AreaCalculatorForm;\n"]},"metadata":{},"sourceType":"module"}