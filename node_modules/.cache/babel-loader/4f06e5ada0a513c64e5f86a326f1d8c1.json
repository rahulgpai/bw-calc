{"ast":null,"code":"var _jsxFileName = \"/home/rpai/Documents/development/react/calculator/src/components/ShapeDimensionForm.js\";\nimport React from \"react\";\nimport InputField from \"./InputField\";\n\nconst ShapeDimensionForm = ({\n  values,\n  handleChange\n}) => {\n  if (values.shape === \"\") {\n    return null;\n  }\n\n  switch (values.shape) {\n    case \"circle\":\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, \"Diameter:\"), React.createElement(InputField, {\n        type: \"text\",\n        name: \"diameter\",\n        classes: \"form-input-field\",\n        event: \"onClick\",\n        action: handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }));\n\n    case \"ellipse\":\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"Width:\"), React.createElement(InputField, {\n        type: \"text\",\n        name: \"axisA\",\n        classes: \"form-input-field\",\n        event: \"onClick\",\n        action: handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }), React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Height:\"), React.createElement(InputField, {\n        type: \"text\",\n        name: \"axisB\",\n        classes: \"form-input-field\",\n        event: \"onClick\",\n        action: handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }));\n\n    case \"square\":\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Width:\"), React.createElement(InputField, {\n        type: \"text\",\n        name: \"side\",\n        classes: \"form-input-field\",\n        event: \"onClick\",\n        action: handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }));\n\n    case \"rectangle\":\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Height:\"), React.createElement(InputField, {\n        type: \"text\",\n        name: \"length\",\n        classes: \"form-input-field\",\n        event: \"onClick\",\n        action: handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), \"Please specify breadth for the \", values.shape, React.createElement(InputField, {\n        type: \"text\",\n        name: \"breadth\",\n        classes: \"form-input-field\",\n        event: \"onClick\",\n        action: handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }));\n  }\n};\n\nexport default ShapeDimensionForm;","map":{"version":3,"sources":["/home/rpai/Documents/development/react/calculator/src/components/ShapeDimensionForm.js"],"names":["React","InputField","ShapeDimensionForm","values","handleChange","shape"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,kBAAkB,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,KAA8B;AACvD,MAAID,MAAM,CAACE,KAAP,KAAiB,EAArB,EAAyB;AACvB,WAAO,IAAP;AACD;;AAED,UAAQF,MAAM,CAACE,KAAf;AACE,SAAK,QAAL;AACE,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE,oBAAC,UAAD;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,OAAO,EAAC,kBAHV;AAIE,QAAA,KAAK,EAAC,SAJR;AAKE,QAAA,MAAM,EAAED,YALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;;AAaF,SAAK,SAAL;AACE,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE,oBAAC,UAAD;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,OAAO,EAAC,kBAHV;AAIE,QAAA,KAAK,EAAC,SAJR;AAKE,QAAA,MAAM,EAAEA,YALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBATF,EAUE,oBAAC,UAAD;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,OAAO,EAAC,kBAHV;AAIE,QAAA,KAAK,EAAC,SAJR;AAKE,QAAA,MAAM,EAAEA,YALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVF,CADF;;AAqBF,SAAK,QAAL;AACE,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE,oBAAC,UAAD;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,OAAO,EAAC,kBAHV;AAIE,QAAA,KAAK,EAAC,SAJR;AAKE,QAAA,MAAM,EAAEA,YALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;;AAaF,SAAK,WAAL;AACE,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE,oBAAC,UAAD;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,OAAO,EAAC,kBAHV;AAIE,QAAA,KAAK,EAAC,SAJR;AAKE,QAAA,MAAM,EAAEA,YALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,qCASkCD,MAAM,CAACE,KATzC,EAUE,oBAAC,UAAD;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,SAFP;AAGE,QAAA,OAAO,EAAC,kBAHV;AAIE,QAAA,KAAK,EAAC,SAJR;AAKE,QAAA,MAAM,EAAED,YALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVF,CADF;AApDJ;AAyED,CA9ED;;AAgFA,eAAeF,kBAAf","sourcesContent":["import React from \"react\";\nimport InputField from \"./InputField\";\n\nconst ShapeDimensionForm = ({ values, handleChange }) => {\n  if (values.shape === \"\") {\n    return null;\n  }\n\n  switch (values.shape) {\n    case \"circle\":\n      return (\n        <div>\n          <b>Diameter:</b>\n          <InputField\n            type=\"text\"\n            name=\"diameter\"\n            classes=\"form-input-field\"\n            event=\"onClick\"\n            action={handleChange}\n          />\n        </div>\n      );\n\n    case \"ellipse\":\n      return (\n        <div>\n          <b>Width:</b>\n          <InputField\n            type=\"text\"\n            name=\"axisA\"\n            classes=\"form-input-field\"\n            event=\"onClick\"\n            action={handleChange}\n          />\n          <b>Height:</b>\n          <InputField\n            type=\"text\"\n            name=\"axisB\"\n            classes=\"form-input-field\"\n            event=\"onClick\"\n            action={handleChange}\n          />\n        </div>\n      );\n\n    case \"square\":\n      return (\n        <div>\n          <b>Width:</b>\n          <InputField\n            type=\"text\"\n            name=\"side\"\n            classes=\"form-input-field\"\n            event=\"onClick\"\n            action={handleChange}\n          />\n        </div>\n      );\n\n    case \"rectangle\":\n      return (\n        <div>\n          <b>Height:</b>\n          <InputField\n            type=\"text\"\n            name=\"length\"\n            classes=\"form-input-field\"\n            event=\"onClick\"\n            action={handleChange}\n          />\n          Please specify breadth for the {values.shape}\n          <InputField\n            type=\"text\"\n            name=\"breadth\"\n            classes=\"form-input-field\"\n            event=\"onClick\"\n            action={handleChange}\n          />\n        </div>\n      );\n  }\n};\n\nexport default ShapeDimensionForm;\n"]},"metadata":{},"sourceType":"module"}