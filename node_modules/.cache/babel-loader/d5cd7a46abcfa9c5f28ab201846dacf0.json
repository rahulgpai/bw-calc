{"ast":null,"code":"var _jsxFileName = \"/home/rpai/Documents/development/react/calculator/src/components/AreaCalculatorForm.js\";\nimport React, { Component } from \"react\";\nimport ShapeSelectionForm from \"./ShapeSelectionForm\";\nimport ShapeDimensionForm from \"./ShapeDimensionForm\";\nimport Area from \"./Area\";\nimport ActionButtons from \"./ActionButtons\";\n\nclass AreaCalculatorForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      step: 1,\n      shape: \"\",\n      diameter: 0,\n      side: 0,\n      length: 0,\n      breadth: 0,\n      axisA: 0,\n      axisB: 0\n    };\n\n    this.nextStep = () => {\n      let step = this.state.step;\n      step = step < 3 ? step + 1 : step;\n      this.setState({\n        step: step\n      });\n    };\n\n    this.prevStep = () => {\n      let step = this.state.step;\n      step = step > 1 ? step - 1 : step;\n      this.setState({\n        step: step\n      });\n    };\n\n    this.setStart = () => {\n      let step = this.state.step;\n      this.setState({\n        step: 1,\n        shape: \"\"\n      });\n    };\n\n    this.handleChange = e => {\n      console.log(this.state);\n      console.log(\"Handle change\");\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n      console.log(this.state);\n    };\n\n    this.setShape = e => {\n      this.setState({\n        shape: e.target.value\n      });\n    };\n  }\n\n  render() {\n    const step = this.state.step;\n    const _this$state = this.state,\n          shape = _this$state.shape,\n          diameter = _this$state.diameter,\n          side = _this$state.side,\n          length = _this$state.length,\n          breadth = _this$state.breadth,\n          axisA = _this$state.axisA,\n          axisB = _this$state.axisB;\n    const values = {\n      shape,\n      diameter,\n      side,\n      length,\n      breadth,\n      axisA,\n      axisB\n    };\n\n    switch (step) {\n      case 1:\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, React.createElement(ShapeSelectionForm, {\n          setShape: this.setShape,\n          values: values,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }), React.createElement(ActionButtons, {\n          step: step,\n          nextStep: this.nextStep,\n          prevStep: this.prevStep,\n          setStart: this.setStart,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }));\n\n      case 2:\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, React.createElement(ShapeDimensionForm, {\n          handleChange: this.handleChange,\n          values: values,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }), React.createElement(ActionButtons, {\n          step: step,\n          nextStep: this.nextStep,\n          prevStep: this.prevStep,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }));\n\n      case 3:\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, React.createElement(Area, {\n          values: values,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }), React.createElement(ActionButtons, {\n          step: step,\n          prevStep: this.prevStep,\n          startAgain: this.setStart,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }));\n    }\n  }\n\n}\n\nexport default AreaCalculatorForm;","map":{"version":3,"sources":["/home/rpai/Documents/development/react/calculator/src/components/AreaCalculatorForm.js"],"names":["React","Component","ShapeSelectionForm","ShapeDimensionForm","Area","ActionButtons","AreaCalculatorForm","state","step","shape","diameter","side","length","breadth","axisA","axisB","nextStep","setState","prevStep","setStart","handleChange","e","console","log","target","id","value","setShape","render","values"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ShapeSelectionForm from \"./ShapeSelectionForm\";\nimport ShapeDimensionForm from \"./ShapeDimensionForm\";\nimport Area from \"./Area\";\nimport ActionButtons from \"./ActionButtons\";\n\nclass AreaCalculatorForm extends Component {\n  state = {\n    step: 1,\n    shape: \"\",\n    diameter: 0,\n    side: 0,\n    length: 0,\n    breadth: 0,\n    axisA: 0,\n    axisB: 0\n  };\n\n  // Proceed to the next step if not the final step\n  nextStep = () => {\n    let { step } = this.state;\n\n    step = step < 3 ? step + 1 : step;\n\n    this.setState({\n      step: step\n    });\n  };\n\n  // Go back to the previous step if not the first step\n  prevStep = () => {\n    let { step } = this.state;\n\n    step = step > 1 ? step - 1 : step;\n\n    this.setState({\n      step: step\n    });\n  };\n\n  setStart = () => {\n    let { step } = this.state;\n\n    this.setState({\n      step: 1,\n      shape: \"\"\n    });\n  };\n\n  // Handle change of the fields\n  handleChange = e => {\n    console.log(this.state);\n    console.log(\"Handle change\");\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n    console.log(this.state);\n  };\n\n  setShape = e => {\n    this.setState({\n      shape: e.target.value\n    });\n  };\n\n  render() {\n    const { step } = this.state;\n    const { shape, diameter, side, length, breadth, axisA, axisB } = this.state;\n    const values = { shape, diameter, side, length, breadth, axisA, axisB };\n\n    switch (step) {\n      case 1:\n        return (\n          <div>\n            <ShapeSelectionForm setShape={this.setShape} values={values} />\n            <ActionButtons\n              step={step}\n              nextStep={this.nextStep}\n              prevStep={this.prevStep}\n              setStart={this.setStart}\n            />\n          </div>\n        );\n      case 2:\n        return (\n          <div>\n            <ShapeDimensionForm\n              handleChange={this.handleChange}\n              values={values}\n            />\n            <ActionButtons\n              step={step}\n              nextStep={this.nextStep}\n              prevStep={this.prevStep}\n            />\n          </div>\n        );\n      case 3:\n        return (\n          <div>\n            <Area values={values} />\n            <ActionButtons\n              step={step}\n              prevStep={this.prevStep}\n              startAgain={this.setStart}\n            />\n          </div>\n        );\n    }\n  }\n}\n\nexport default AreaCalculatorForm;\n"]},"metadata":{},"sourceType":"module"}